version: 2.1

commands:

  rust_nightly:
    description: Install nightly Rust toolchain
    steps:
      - run:
          name: Install rust nightly-2020-11-19
          command: rustup toolchain install nightly-2020-11-19
      - run:
          name: Install rustfmt and clippy for nightly-2020-11-19
          command: rustup component add rustfmt clippy --toolchain nightly-2020-11-19

jobs:
  fmt:
    docker:
      - image: quay.io/influxdb/rust:ci
    steps:
      - checkout
      - rust_nightly
      - run:
          name: Rust fmt
          command: cargo fmt --all -- --check
  lint:
    docker:
      - image: quay.io/influxdb/rust:ci
    steps:
      - checkout
      - rust_nightly
      - run:
          name: Clippy
          command: cargo clippy --all-targets --workspace -- -D warnings
  test:
    docker:
      - image: quay.io/influxdb/rust:ci
    resource_class: xlarge # use of a smaller executor tends crashes on link
    steps:
      - checkout
      - rust_nightly
      - run:
          name: Cargo test
          command: cargo test --workspace
  build:
    docker:
      - image: quay.io/influxdb/rust:ci
    steps:
      - checkout
      - rust_nightly
      - run:
          name: Cargo build
          command: cargo build --workspace

  ci_image:
    machine: true
    resource_class: xlarge
    steps:
      - checkout
      - run: |
          echo "$QUAY_PASS" | docker login quay.io --username $QUAY_USER --password-stdin
      - run: |
          COMMIT_SHA=$(git rev-parse --short HEAD)
          docker build -t quay.io/influxdb/rust:$COMMIT_SHA -f docker/Dockerfile.ci .
          docker tag quay.io/influxdb/rust:$COMMIT_SHA quay.io/influxdb/rust:ci
          docker push quay.io/influxdb/rust:$COMMIT_SHA
          docker push quay.io/influxdb/rust:ci
  perf_image:
    docker:
      - image: quay.io/influxdb/rust:ci
    steps:
      - checkout
      - rust_nightly
      - run:
          name: Cargo release build with target arch set for CRoaring
          command: ROARING_ARCH=x86-64 cargo build --release
      - setup_remote_docker:
          docker_layer_caching: true
      - run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
      - run: |
          echo "$QUAY_PASS" | docker login quay.io --username $QUAY_USER --password-stdin
      - run: |
          BRANCH=$(git rev-parse --abbrev-ref HEAD | tr '/' '.')
          docker build -t quay.io/influxdb/fusion:$BRANCH -f docker/Dockerfile.perf .
          docker push quay.io/influxdb/fusion:$BRANCH

workflows:
  version: 2
  build:
    jobs:
      - fmt
      - lint
      - test
      - build
      - perf_image:
          requires: # Only do a release build if all tests have passed
            - fmt
            - lint
            - test
            - build
          filters:
            branches:
              only: /.*\/perf$/ # Only do a release build if the branch name ends in `/perf`
  ci_image:
    triggers:
      - schedule:
          cron: "0 5 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - ci_image
